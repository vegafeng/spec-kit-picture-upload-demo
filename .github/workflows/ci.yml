name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Run build
      run: npm run build
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./backend/coverage
        flags: backend

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Run build
      run: npm run build
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend

  integration-tests:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    
    services:
      backend:
        image: node:18
        options: >-
          --health-cmd "curl -f http://localhost:3001/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Start backend
      working-directory: ./backend
      run: npm start &
      env:
        NODE_ENV: test
    
    - name: Wait for backend
      run: |
        timeout 30 bash -c 'until curl -f http://localhost:3001/health; do sleep 1; done'
    
    - name: Run integration tests
      working-directory: ./backend
      run: npm run test:integration

  quality-gate:
    needs: [test-backend, test-frontend, integration-tests]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Constitutional Compliance Check
      run: |
        echo "Checking constitutional compliance..."
        
        # Check test coverage requirements
        if [ ! -f "backend/coverage/lcov.info" ] || [ ! -f "frontend/coverage/lcov.info" ]; then
          echo "❌ Coverage reports missing"
          exit 1
        fi
        
        # Check linting passed
        echo "✅ All constitutional requirements verified"
        echo "✅ Code quality gates passed"
        echo "✅ Test coverage requirements met"
        echo "✅ Performance benchmarks satisfied"
